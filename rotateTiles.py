

tiles = [[[(0, 4), (1, 6), (2, 5), (3, 7)],
		 [(0, 7), (1, 6), (2, 4), (3, 5)],
		 [(0, 1), (2, 3), (4, 5), (6, 7)],
		 [(0, 5), (1, 3), (2, 6), (4, 7)],
		 [(0, 7), (1, 2), (3, 4), (5, 6)],
		 [(6, 7), (2, 3), (0, 4), (1, 4)]],

		 [[(1, 2), (0, 3), (5, 6), (4, 7)],
		 [(0, 4), (1, 5), (2, 6), (3, 7)],
		 [(0, 3), (1, 6), (2, 5), (4, 7)],
		 [(0, 6), (1, 7), (2, 4), (3, 5)],
		 [(0, 4), (1, 5), (7, 2), (6, 3)],
		 [(0, 7), (1, 4), (2, 6), (6, 3)]],

		 [[(0, 4), (1, 7), (2, 6), (3, 5)],
		 [(0, 2), (1, 7), (3, 4), (5, 6)],
		 [(0, 5), (1, 4), (2, 7), (3, 6)],
		 [(0, 3), (1, 5), (2, 4), (6, 7)],
		 [(0, 1), (2, 4), (3, 6), (5, 7)],
		 [(1, 2), (0, 4), (3, 6), (5, 7)]],

		 [[(0, 7), (1, 5), (2, 6), (3, 4)],
		 [(0, 2), (1, 5), (3, 4), (6, 7)],
		 [None],
		 [(0, 6), (7, 2), (1, 4), (3, 5)],
		 [(0, 6), (1, 7), (2, 3), (4, 5)],
		 [(0, 2), (1, 5), (7, 3), (6, 4)]],

		 [[(0, 6), (1, 3), (2, 4), (5, 7)],
		 [(0, 7), (1, 3), (2, 5), (6, 4)],
		 [(0, 4), (1, 2), (3, 5), (6, 7)],
		 [(0, 1), (2, 7), (3, 4), (4, 5)],
		 [(0, 1), (2, 7), (3, 5), (4, 6)],
		 [(0, 1), (2, 5), (3, 6), (4, 7)]],

		 [[(0, 2), (1, 4), (3, 7), (5, 6)],
		 [(0, 7), (1, 6), (2, 3), (4, 5)],
		 [(6, 7), (0, 4), (1, 3), (2, 5)],
		 [(0, 1), (4, 5), (2, 7), (3, 6)],
		 [(0, 3), (1, 6), (2, 4), (5, 7)],
		 [(0, 6), (1, 4), (7, 3), (2, 5)]]]

transformations = [
(0, 3, 0),
(5, 2, 0),
(4, 4, 180),
(0, 5, 0),
(3, 5, 0),

(0, 6, 90),
(5, 4, 0),
(3, 1, 270),
(4, 3, 90),
(2, 2, 270),

(4, 2, 180),
(2, 4, 270),
(4, 5, 180),
(5, 3, 270),
(4, 6, 180),

(1, 1, 0), 
(0, 2, 0),
(2, 6, 0),
(3, 1, 90),
(2, 5, 90),

(2, 6, 180),
(5, 1, 180),
(3, 4, 270),
(0, 4, 0),
(2, 1, 90),

(1, 4, 90),
(2, 3, 0),
(1, 5, 90),
(1, 2, 0),
(0, 1, 270),

(5, 6, 270),
(3, 6, 0),
(5, 5, 0),
(4, 1, 0),
(1, 3, 0)]


def rotate(piece, rotation):
	rot = rotation / 90
	rotated = []
	l = lambda x : (x + (rot * 2)) % 8
	for a, b in piece:
		rotated.append((l(a), l(b)))
	return rotated

final = []
for row, col, rotation in transformations:
	#print "rotating %d, %d %d degrees" % (row, col, rotation)
	final.append(rotate(tiles[row][col-1], rotation))

for tile in final:
	print tile



